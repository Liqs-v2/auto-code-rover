[
    {
        "instance_id":"django__django-14792",
        "underspecified":0.0,
        "underspecified_notes":"The issue description highlights a discrepancy in the timezone in Django version 3.1 as opposed to Django version 3.2. It highlights the fact that due to a change in the return value of the method `_prepare_tzname_delta()` of the Postgres DatabaseOperations class. Moreover the issue description states that this same behaviour can be witnessed when calling the method `zoneinfo.ZoneInfo()`. It clearly outlines the inaccuracy of the returned value of the methods in both Django versions. There is a clear indication of what is expected in order to obtain a reasonable solution.",
        "false_negative":0.0,
        "false_negative_notes":"The test patch performs checks to determine that the correct timezone is obtained when calling the `zoneinfo.ZoneInfo()` and `_prepare_tzname_delta()` methods. Reasonable solutions would pass the test patch.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":5,
        "false_negative_decided_by":5,
        "other_major_issues_decided_by":5,
        "difficulty_decided_by":"[37, 59]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0.0"
    },
    {
        "instance_id":"django__django-13121",
        "underspecified":1.0,
        "underspecified_notes":"The issue description does not specify the expected behavior when using durations-only expressions with SQLite and MySQL.",
        "false_negative":1.0,
        "false_negative_notes":"The test is closely tied to the gold patch, as it assumes the use of `F('estimated_time') + delta` to create annotations, which is a specific implementation detail of the gold patch. If another solution employs a different approach, the test would fail.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":70,
        "false_negative_decided_by":70,
        "other_major_issues_decided_by":70,
        "difficulty_decided_by":"[54, 28]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":3,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240820_honeycomb",
            "20241016_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.92,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1.0"
    },
    {
        "instance_id":"django__django-16950",
        "underspecified":1.0,
        "underspecified_notes":"The issue is somewhat clear in that the UUIDField default value is not being used correctly in the Django admin interface when adding a SubThing alongside a Thing. However, the description could be improved by explicitly stating that the expected behavior is for the id field to automatically receive a UUID value upon creation. There is a sensible interpretation of what is required for a successful solution.",
        "false_negative":1.0,
        "false_negative_notes":"The test patch checks to ensure that if form data is provided, a parent's auto-generated alternate key is set correctly in the formset. As the test patch ensures that the UUID field is set correctly appropriately, reasonable solutions that do not address this would fail the test case.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":32,
        "false_negative_decided_by":5,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[32, 6, 5]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1.0"
    },
    {
        "instance_id":"pydata__xarray-3677",
        "underspecified":0.0,
        "underspecified_notes":"The issue clearly states that merging a DataArray into a Dataset using the ds.merge() method fails, even though the top-level merge() function works. This provides a specific and well-defined problem to solve. The expected behavior is shown with the xr.merge([ds, da]) function call, and the actual error is demonstrated with the ds.merge(da) call. This makes it clear what the code should do and what it currently does instead.",
        "false_negative":0.0,
        "false_negative_notes":"The test test_merge_dataarray specifically addresses the issue described in the problem statement by checking the behavior of the ds.merge(da) method. This directly corresponds to the example provided in the issue description. The test is straightforward and directly relevant to the issue. It does not introduce any extraneous checks or complexities that could cause false negatives for other reasonable solutions.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":32,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[32, 56, 71]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":22,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.39,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0.0"
    },
    {
        "instance_id":"sympy__sympy-19954",
        "underspecified":1.0,
        "underspecified_notes":"The ticket shows reproducible examples of the error shown to the user. However, the bug itself is not clear and it needs some digging to understand what needs to be done here which is considered yet a blank to fill. However, it is a good start to have an example and an error code.",
        "false_negative":0.0,
        "false_negative_notes":"The tests added specifically target the functionality described in the issue—ensuring the `sylow_subgroup` method works correctly for a `DihedralGroup` of specific orders (18 and 50). This directly addresses the scenario causing the `IndexError` described in the issue. The tests check that not only does the method no longer throw an error, but it also returns groups of the expected order.\n",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":7,
        "false_negative_decided_by":43,
        "other_major_issues_decided_by":43,
        "difficulty_decided_by":"[7, 44]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":15,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.58,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0.0"
    },
    {
        "instance_id":"matplotlib__matplotlib-21568",
        "underspecified":0.0,
        "underspecified_notes":"This issue description is well specified with reproduction example and  sufficient details on what a suitable solution would be.\n",
        "false_negative":1.0,
        "false_negative_notes":"The edits made to expected values for test functions align with changes implemented in gold patch. Although, the spacing issue with '-' is not demonstrated, it is intuitive when fixing spacing issue with ':' and 'numbers'. There may be some unusual solutions missing this.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":56,
        "false_negative_decided_by":21,
        "other_major_issues_decided_by":56,
        "difficulty_decided_by":"[56, 12, 21]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1.0"
    },
    {
        "instance_id":"django__django-14349",
        "underspecified":1.0,
        "underspecified_notes":"The issue description points out that the unit tests for URLs are failing. It highlights that a recent patch changes the URL splitting behaviour to strip all instances of LF, CR and tab characters before splitting and thus it never reaches the validator. The issue description is however not certain of a possible fix although it provides some ways to mitigate the issue. There are some blanks to fill in as the issue description could have elaborated more on the actual fix that caused this. This could have shed more light on how a potential reasonable solution could have been crafted.",
        "false_negative":1.0,
        "false_negative_notes":"This rating is chosen because while the tests are comprehensive and align well with the typical cases expected to be handled by the URLValidator, there is always the possibility of unusual or edge cases not covered by the standard test scenarios. \nFor example, complex URLs that might include encoded characters or combinations of unsafe characters with other URL components might behave differently. \nThe current tests focus on straightforward insertions of newline, carriage return, and tab characters in various parts of the URL, which covers most practical scenarios but might miss some more complex or less common variations.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":5,
        "false_negative_decided_by":37,
        "other_major_issues_decided_by":5,
        "difficulty_decided_by":"[37, 32]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":20,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.44,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1.0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-10466",
        "underspecified":0.0,
        "underspecified_notes":"The description is clear to highlight the issue that the location of the message is duplicated. It shares an example for the same and also points to the source of the error with a potential solution. Further, it shares a way to reproduce the error and the expected behavior. Thus, the issue is well-specified.",
        "false_negative":0.0,
        "false_negative_notes":"The test checks for duplication of locations by adding duplicate locations for the message which is specifically the issue highlighted in the description. Thus the test should be able to cover all possible solutions aimed at removing the duplicates.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":76,
        "false_negative_decided_by":76,
        "other_major_issues_decided_by":76,
        "difficulty_decided_by":"[76, 39]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":16,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240820_honeycomb",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.56,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0.0"
    },
    {
        "instance_id":"pytest-dev__pytest-5840",
        "underspecified":1.0,
        "underspecified_notes":"The issue description outlines an ` ImportError` while loading `conftest.py` in `pytest` version  5.1.2. `Pytest` is unable to correctly resolve the module path with an error message: \"No module named 'python'\".\nThe description outlines that this error is not raised in version 5.1.1 and expects the same for the newer version.\nHowever, the issue description contains some vague statements, i.e., \"the path was converted to lowercase\"  and \"(windows import folder casing issues)\", that require some research to understand.",
        "false_negative":1.0,
        "false_negative_notes":"The tests provided in the patch cover a wide range of scenarios related to the issue of import path casing on Windows. The patch introduces two main changes: the removal of the `unique_path` function and the use of `Path().resolve()` to handle path normalization. The existing tests are updated to remove the use of unique_path and to check paths directly using the resolved path method. A new test `test_conftest_uppercase` is added to explicitly check the scenario where the 'conftest' path contains uppercase characters, addressing the core issue described. The tests validate that the 'conftest' module loading works correctly even when the path casing is inconsistent which directly addresses the issue of 'ImportError' due to path casing differences. The tests cover majority of the correct solutions however some unusual solutions such as introducing completely new methods for path normalization or restructuring the directory scanning logic may not be directly covered. However, these solutions are unlikely to be developed. So a score of 1 is appropriate.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":57,
        "false_negative_decided_by":6,
        "other_major_issues_decided_by":57,
        "difficulty_decided_by":"[6]",
        "difficulty_ensemble_decision_procedure":"median",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1.0"
    },
    {
        "instance_id":"sympy__sympy-15017",
        "underspecified":0.0,
        "underspecified_notes":"- The issue text is very well-specified with a clear problem statement, examples of the current behavior, and a comparison with the expected behavior as seen in NumPy. len returns 0 for rank-0 arrays when it should return 1.\n- There are no significant gaps in the issue description. The examples and comparison provided make it clear what the problem is and what the expected behavior should be.",
        "false_negative":0.0,
        "false_negative_notes":"- The tests directly check that len(rank_zero_array) returns 1, aligning with the expected behavior as described in the issue.\n- The tests also verify the shape, rank, and indexing behavior of rank-0 arrays, making sure that they work correctly and return the expected values.\n- Any valid solution that makes sure, that the length of rank-0 arrays returns 1 and indexing works correctly, would pass all provided tests. Therefore, tests cover all possible solutions.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":26,
        "false_negative_decided_by":26,
        "other_major_issues_decided_by":26,
        "difficulty_decided_by":"[26, 13, 23]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0.0"
    },
    {
        "instance_id":"django__django-15104",
        "underspecified":1.0,
        "underspecified_notes":"- A `KeyError` occurs when the migration autodetector encounters a custom `ForeignKey` field with a hardcoded `to` argument, causing the field's `to` attribute to be removed from its deconstructed keyword arguments. This issue prevents the test suite from running in verbose mode and results in a traceback error. An example is provided to replicate the issue.\n- The author writes that the design is questionable, but not incorrect. That does not make the problem invalid though. The main problem is that the project is 10 years old does not specify the Django version in which the problem was encountered or if it persists in newer versions. It's possible that the bug is fixed in the newer versions. This is one of the detail that the programmer would need to fill in.",
        "false_negative":0.0,
        "false_negative_notes":"The test validates that the MigrationAutodetector correctly identifies and processes the changes involving the custom ForeignKey. It verifies that a new migration is created (CreateModel operation) for the Book model, ensuring that any solution works as intended.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":19,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[32, 34, 19]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":30,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.17,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0.0"
    },
    {
        "instance_id":"django__django-12125",
        "underspecified":0.0,
        "underspecified_notes":"The problem statement explains the Django `makemigration` command issue, which does not correctly handle inner classes when the `makemigrations` command is applied.\nThe user explains how to reproduce the issue; when we define `Outer` class with an inner class `Inner` and use this inner class `Outer.Inner` as a field type in Django model `A`, then run `manage.py makemigrations` command, the generated migration files incorrectly refers to the inner class as if it were a top-level class. The migration file should reference `test1.models.Outer.Inner` instead of `test1.models.Inner`. However, the same issue occurs with fields from external libraries, such as `EnumField` from `django-enumfields`.\nThe problem statement is clear and well explained, and the desired solution is also mentioned in the issue description.",
        "false_negative":0.0,
        "false_negative_notes":"The gold patch fixes the mentioned issue in the description by replacing the `__name__` attribute with `__qualname__` attribute in the serialize function. The `__qualname__` attribute provides the qualified name of the class, which includes the outer class name correctly.\nThe test patch successfully passes all the test cases of the gold patch code. The function, `test_serialize_nested_class` is added to check that the serialization of nested classes works correctly, including nested enums and nested choices. These test cases ensure that the new `__qualname__` attributes are working and other nested classes are also serialized correctly.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":49,
        "false_negative_decided_by":49,
        "other_major_issues_decided_by":49,
        "difficulty_decided_by":"[49, 32]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":5,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20241022_tools_claude-3-5-haiku",
            "20241016_composio_swekit",
            "20241025_composio_swekit",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.86,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0.0"
    },
    {
        "instance_id":"sympy__sympy-19040",
        "underspecified":0.0,
        "underspecified_notes":"When using SymPy's `factor` function with the `extension` parameter, a factor is unexpectedly dropped from the result. The `factor` function should correctly factor expressions even when extensions are specified. Hence, the value is well specified.",
        "false_negative":0.0,
        "false_negative_notes":"The `@XFAIL` decorator is removed from the `test_issue_5786` function that should pass now. This test checks the behavior of the `factor` function when used with the `extension` parameter, directly related to the issue. Therefore, All successful solution will allow the test to pass.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":42,
        "false_negative_decided_by":42,
        "other_major_issues_decided_by":42,
        "difficulty_decided_by":"[14, 43]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241028_agentless-1.5_gpt4o"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0.0"
    },
    {
        "instance_id":"matplotlib__matplotlib-26466",
        "underspecified":0.0,
        "underspecified_notes":"The issue description is complete.It describes the problem on how updating a passed array affects an annotation. It has examples to reproduce the issue and good information of what a solution would be. The reporter expects the copy of the array to be used for annotation so that subsequently updating the array won’t affect the annotation.",
        "false_negative":0.0,
        "false_negative_notes":"This Matplotlib test, `test_annotate_and_offsetfrom_copy_input`, is designed to verify that annotations in a plot behave consistently when using different approaches for positioning, even when the input data for positioning is modified after the annotation call. It uses the `@check_figures_equal decorator` to ensure that the two approaches produce visually identical results on the plots. This test is adequate to validate all solutions as it satisfies the issue requirement.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":56,
        "false_negative_decided_by":56,
        "other_major_issues_decided_by":56,
        "difficulty_decided_by":"[56, 53, 55]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0.0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-25747",
        "underspecified":0.0,
        "underspecified_notes":"The issue is clear; FeatureUnion not working when aggregating data and pandas transform output selected. A sample code is also shared to reproduce the problem. The actual and expected results are shared.",
        "false_negative":1.0,
        "false_negative_notes":"The test case test_set_output_pandas_keep_index is testing for the internal cause of the issue - set_output does not override index. Some unusual solutions that don't follow this route may fail this test.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":54,
        "false_negative_decided_by":54,
        "other_major_issues_decided_by":54,
        "difficulty_decided_by":"[39, 11]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1.0"
    },
    {
        "instance_id":"django__django-16315",
        "underspecified":0.0,
        "underspecified_notes":"The issue arises when using `QuerySet.bulk_create()` on mixed case columns with `update_conflicts=True`, `update_fields`, and `unique_fields` on a Django model that has `db_column` set for some fields. The SQL generated for the \"ON CONFLICT\" clause incorrectly uses the field names instead of the `db_column` names, leading to a syntax error as field names are all lower case. For example, if a field named `blacklistid` is defined with `db_column=\"BlacklistID\"`, the correct SQL should use `\"BlacklistID\"` instead of `\"blacklistid\"`. A successful solution would generate the correct query that will match the column names with case. Hence, the issue is clear and well-specified. ",
        "false_negative":0.0,
        "false_negative_notes":"The test patch adds a new model class `FieldsWithDbColumns` with columns rank and name. `db_column` in both the fields is a mixture of uppercase and lowercase (`rAnK` and `oTheRNaMe`), which were problematic. In the test function, we create two instances of `FieldsWithDbColumns` and assert that they are created properly. Two conflicting objects with the same ranks (1 and 2) but different names (\"c\" and \"d\") are created. `bulk_create` is called with `update_conflicts=True`, specifying that conflicts should be resolved based on the rank field, and only the name field should be updated. Then, it is asserted that the count remains 2, but the names have been updated to \"c\" and \"d\" from older names. Hence, this testcase closely follow the description in Section 1 and any reasonable solution would be covered by the tests here. Hence, rating it 0.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":19,
        "false_negative_decided_by":19,
        "other_major_issues_decided_by":19,
        "difficulty_decided_by":"[19, 5]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":4,
        "solved_by":[
            "20240820_honeycomb",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.89,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0.0"
    },
    {
        "instance_id":"django__django-12273",
        "underspecified":1.0,
        "underspecified_notes":"The issue description concerning resetting the primary key in a child model derived from Django's `Item` model is generally well-defined. The example provided includes specific class definitions (`Item` and `Derived`) and a test case (`SaveTestCase`) to demonstrate the unexpected behavior. However, there are some blanks regarding the exact outcome of the operation when the primary key is set to `None` and the object is saved—specifically, whether it throws an error or incorrectly updates an existing record without creating a new one. ",
        "false_negative":1.0,
        "false_negative_notes":"The tests verify that new instances are correctly created in both single and multi-table inheritance contexts without overwriting existing data, directly testing the changes implemented via `_set_pk_val` method adjustments. This focus makes the tests highly effective for the specific solution implemented but could potentially overlook other valid approaches that also ensure the primary key is reset and a new instance is created but do not utilize the exact handling of `_meta.parents` or other specific attributes manipulated in the Gold Patch. ",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":13,
        "false_negative_decided_by":13,
        "other_major_issues_decided_by":13,
        "difficulty_decided_by":"[13, 18]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1.0"
    },
    {
        "instance_id":"django__django-16667",
        "underspecified":1.0,
        "underspecified_notes":"The issue is clear; SelectDateWidget can crash with OverflowError.. A sample code is also shared to reproduce the problem.\nHowever, the overflow error message to display is not stated.",
        "false_negative":1.0,
        "false_negative_notes":"While the test covers all possible solutions, some unusual solutions that do not follow the standard overflow error message practice in the repository may be missed.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":54,
        "false_negative_decided_by":54,
        "other_major_issues_decided_by":54,
        "difficulty_decided_by":"[54, 32]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1.0"
    },
    {
        "instance_id":"django__django-12193",
        "underspecified":1.0,
        "underspecified_notes":"- The issue description identifies that SplitArrayField BooleanField widgets become checked incorrectly after the first True value, and specifies the responsible method (CheckboxInput's get_context()) and links to the relevant code line.\n- The issue mentions the problem occurs when providing preexisting data and provides a direction to investigate the issue in the codebase by providing a link to the line of code.\n- However, it lacks specific examples to reproduce the issue and the expected output which is implied in this case, leaving some details for the developer to determine.\n- Therefore, the problem is clear but there are some blanks to fill in about the issue.",
        "false_negative":1.0,
        "false_negative_notes":"The tests validate that CheckboxInput's get_context method does not mutate the attrs dictionary and that SplitArrayWidget correctly initializes checkbox attributes without carrying over previous values. This ensures proper behavior and prevents unintended attribute modifications.\nIt will work correctly for the gold patch but may fail for some unusual solutions, like changing the flow.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":26,
        "false_negative_decided_by":24,
        "other_major_issues_decided_by":24,
        "difficulty_decided_by":"[24, 26, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":18,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.5,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1.0"
    },
    {
        "instance_id":"sympy__sympy-17139",
        "underspecified":1.0,
        "underspecified_notes":"The `simplify` function in SymPy raises a `TypeError` when attempting to simplify `cos(x)**I` due to an invalid comparison involving the complex number `I`. To handle this, the simplification process should be updated to avoid invalid comparisons with complex numbers. Although, expected behavior is not specified but It is safe to interpret that to successfully solve the issue, if the exponent is not real (i.e., it's a complex number like `I`), the function should return the original expression without attempting further simplification.\n\nNote: The error has been raised because of the statement in the `_f` inner function of the `T` function.",
        "false_negative":0.0,
        "false_negative_notes":"The tests verify that the simplification of a trigonometric function powered with a non-real number works correctly without any error. The test uses the same\/similar cases to the one that is provided in the issue description. I cannot think of any other solution that might fail the tests.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":42,
        "false_negative_decided_by":44,
        "other_major_issues_decided_by":44,
        "difficulty_decided_by":"[44, 42, 43]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":9,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240628_autocoderover-v20240620",
            "20241022_tools_claude-3-5-haiku",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.75,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0.0"
    },
    {
        "instance_id":"django__django-11400",
        "underspecified":1.0,
        "underspecified_notes":"The issue description is fairly clear but leaves some details ambiguous. It specifies that RelatedFieldListFilter does not fallback to Model._meta.ordering and that RelatedOnlyFieldListFilter does not apply any ordering at all. The issue references specific lines in filters.py where the ordering is set to an empty tuple and where the ordering kwarg is omitted, providing a good starting point. However, it does not explicitly state what the final ordering behavior should be, especially in cases where multiple orderings might be defined. The issue assumes knowledge of how ModelAdmin and Meta.ordering interact, requiring the engineer to fill in these gaps with reasonable interpretations based on the code and Django's documentation.",
        "false_negative":1.0,
        "false_negative_notes":"The tests cover the majority of correct solutions by checking the ordering behavior of RelatedFieldListFilter and RelatedOnlyFieldListFilter based on ModelAdmin.ordering and Meta.ordering. They are comprehensive in validating various scenarios, such as ForeignKey relationships and default ordering. However, there is a possibility that some unusual solutions, such as alternative methods to set or override ordering within custom filters or different handling of dynamic ordering, may not be fully captured.  Additionally, it includes tests for ensuring the get_choices method respects Model._meta.ordering, which is a related but not explicitly mentioned problem in the original issue description.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":80,
        "false_negative_decided_by":80,
        "other_major_issues_decided_by":80,
        "difficulty_decided_by":"[80, 62]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1.0"
    },
    {
        "instance_id":"sympy__sympy-24562",
        "underspecified":0.0,
        "underspecified_notes":"The issue raises a bug where the output of `Rational('0.5', '100')` is 1\/100100. The expected value, according to the issue, is 1\/200. We can infer that the output of `Rational('0.5', '100')` should have been 1\/200. Since both the problem and the expectation from the solution are clear, I think the rating should be 0.",
        "false_negative":0.0,
        "false_negative_notes":"The tests check that the value of `Rational(p, q)` is the same even if `p` and `q` are strings or integers. It also explicitly checks the value of `Rational('0.5', '100')`. Any reasonable solution should pass this test, so I think the tests cover all possible solutions. ",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":65,
        "false_negative_decided_by":65,
        "other_major_issues_decided_by":65,
        "difficulty_decided_by":"[13, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0.0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-9320",
        "underspecified":0.0,
        "underspecified_notes":"When running `sphinx-quickstart` in a directory that already contains a `conf.py` file, a prompt is displayed to the user to enter a new root path name or press Enter to exit. However, when the user presses Enter, the tool returns an error message asking for a valid path name instead of exiting as expected. It prevents the user from exiting. The description is well specified and its expected that After pressing Enter, sphinx-quickstart should exit so its rated 0. ",
        "false_negative":0.0,
        "false_negative_notes":"The test checks whether the prompt exits or not when having a config file in the same directory so it should cover all possible solutions, its rated 0.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":30,
        "false_negative_decided_by":30,
        "other_major_issues_decided_by":30,
        "difficulty_decided_by":"[30, 7, 15]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":21,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240402_sweagent_gpt4",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid"
        ],
        "empiric_difficulty":0.42,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0.0"
    },
    {
        "instance_id":"django__django-15563",
        "underspecified":1.0,
        "underspecified_notes":"The issue description clearly outlines the problem with an example, illustrating that when a queryset update is performed on a class that inherits from multiple classes, the update incorrectly affects instances of one of the parent classes instead of the child class instances. The provided code example is clear and demonstrates the problem step by step i.e. creation of 'OtherBase' instances, creation of child instances, performing an update on the Child queryset and observing the incorrect update behavior in the 'OtherBase' instances. The expected behavior is not explicitly stated but it can be interpreted that the 'Child' queryset update should only affect the 'Child' instances not the 'OtherBase' instances. Hence a score of 1 is appropriate.",
        "false_negative":1.0,
        "false_negative_notes":"- The problem statement is clear and sets proper expectation from desired solution, test case `test_mti_update_parent_through_child` and `test_mti_update_grand_parent_through_child` are verifying the scenarios mentioned in the problem statement and checks whether it returns the updated value or not. In the test case it is checking whether retrieving the data using child class queryset is returning updated values or not.\n- But, based in the issue description, it is evident that both child and parent queryset should return same updated values, and test patch is only testing the scenarios where child queryset is returning is expected value, it should also checks the cases where parent queryset should also return the same updated values.\n- There could be some unusual solutions, which would be missed by this test patch where child queryset query is working properly but parent queryset query is broken.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":6,
        "false_negative_decided_by":69,
        "other_major_issues_decided_by":69,
        "difficulty_decided_by":"[69, 6, 63]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1.0"
    },
    {
        "instance_id":"django__django-14539",
        "underspecified":0.0,
        "underspecified_notes":"The description is clear and includes specific examples related to the issue, illustrating the expected versus actual behaviour. This clarity allows for a better understanding of the problem and enables work on a solution without requiring further clarification. Therefore, option 0 should be the preferred choice.",
        "false_negative":1.0,
        "false_negative_notes":"The test cases handle the scenario described in the issue. However, some edge cases might be missed, such as different types of HTML entities and multiple trailing punctuation marks. These omissions could result in missing some unusual but valid solutions.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":89,
        "false_negative_decided_by":89,
        "other_major_issues_decided_by":89,
        "difficulty_decided_by":"[89, 26]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":15,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.58,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1.0"
    },
    {
        "instance_id":"sympy__sympy-15599",
        "underspecified":0.0,
        "underspecified_notes":"The issue gave all the code that needs to be changed and also with the functions. Thus, the engineer just needs to implement them.",
        "false_negative":0.0,
        "false_negative_notes":"The test cases will cover all the possible solutions. One test cases were given in the issue description only. The others are also similar to it.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":2,
        "false_negative_decided_by":2,
        "other_major_issues_decided_by":2,
        "difficulty_decided_by":"[39, 55]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0.0"
    },
    {
        "instance_id":"sympy__sympy-16792",
        "underspecified":0.0,
        "underspecified_notes":"The issue description is clear. It explains that when using the Cython backend for autowrap, the code generation fails if the function being wrapped has array arguments that do not appear in the final expression. It provides a minimal counterexample to illustrate both the expected behavior and the actual error. Since it includes all necessary details to understand and reproduce the issue, it should be rated as 0.",
        "false_negative":1.0,
        "false_negative_notes":"The gold patch fixes the issue mentioned in the description by ensuring that the codegen processes now handle the array arguments even if they do not appear in the expression, and the generated C function should have the correct signature. The fix also covers the `IndexedBase` instances which was not mentioned in the issue description.\nThe test cases successfully pass all the reasonable solutions by verifying that `x` appears correctly as `double *` in the signature function. However, some unusual solutions can fail these test cases, such as \"Test with Multiple Array Arguments\" and \"Test with Scalar and Array Arguments\".",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":12,
        "false_negative_decided_by":49,
        "other_major_issues_decided_by":12,
        "difficulty_decided_by":"[12, 13]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1.0"
    },
    {
        "instance_id":"django__django-12039",
        "underspecified":0.0,
        "underspecified_notes":"The issue statement describes the problem well and offers the desired results: Creating an index generates the result CREATE INDEX \"idx\" ON \"schema_author\" (\"name\"DESC) with a missing white space between name and desc, while generating the index with opclasses=['text_pattern_ops’], adds an extra white space in (“name” text_pattern_ops )\nSo the issue can be rated as 0.",
        "false_negative":0.0,
        "false_negative_notes":"The test patch covers the exact issue raised in the problem statement and any new solution should be able to pass it. test_columns_list_sql and test_descending_columns_list_sql functions test that the missing white space is present and then test_ops_class_columns_lists_sql and test_ops_class_descending_columns_list_sql check that the trailing extra whitespace from the issue statement is gone.\nThat ensures the correct resolution of the problem. Hence the 0 label",
        "other_major_issues":0.0,
        "other_notes":"No other issues with the task",
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":53,
        "false_negative_decided_by":53,
        "other_major_issues_decided_by":53,
        "difficulty_decided_by":"[53, 14]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":10,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20241016_composio_swekit",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.72,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0.0"
    },
    {
        "instance_id":"psf__requests-1142",
        "underspecified":1.0,
        "underspecified_notes":"- The issue description is well-specified, and the expected behavior is implied that GET requests should not include the Content-Length header automatically, and provides enough context for an engineer to understand the problem and why it needs to be addressed.\n- The issue does not provide a specific code example to explain the problem and lacks information about the environment, such as the version of the requests library being used.\n\n",
        "false_negative":1.0,
        "false_negative_notes":"The issue description specifies that `requests.get` should not automatically add a `content-length` header. The test patch verifies that `content-length` is not present in the headers for `GET` and `HEAD` requests. This directly aligns with the issue's requirement. While this aligns with the issue description that GET requests should not automatically include a 'Content-Length' header, the tests may not cover some unusual implementations that might handle the 'Content-Length' behavior differently. For example, a solution might implement a way to configure this behavior (as suggested by the original issue), rather than outright removal in all cases.\n\n",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":26,
        "false_negative_decided_by":43,
        "other_major_issues_decided_by":2,
        "difficulty_decided_by":"[43, 2, 26]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":7,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240824_gru",
            "20240820_honeycomb",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.81,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1.0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-8475",
        "underspecified":0.0,
        "underspecified_notes":"The description clearly explain a issue involves a bug in the linkchecker tool, where some websites enter infinite redirect loops with HEAD requests, resulting in a \"Too Many Redirects\" error. Previously, the fallback to GET requests was not applied to this error type, causing the links to be reported as broken. This bugfix extends the exception handling logic to include \"Too Many Redirects\" errors, allowing the linkchecker to retry with a GET request in such cases. This change restores the functionality that worked prior to Sphinx 3.2.0, ensuring URLs that previously passed the linkcheck continue to do so.",
        "false_negative":0.0,
        "false_negative_notes":"The test simulates a scenario where a HEAD request causes an infinite redirect loop. By verifying that the link checker retries with a GET request and successfully processes the link, the test ensures that the new exception handling logic (extended to cover TooManyRedirects) is functioning as expected. This confirms that the bug fix is effective, allowing the link checker to handle such cases correctly and report the link as working. This test focus on the controlling mechanism to control the issue. The description already specify how the solution will look  like i.e. falling on GET request, which was what the testpatch does. The test case covers all the required solution possible based in the issue description.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":28,
        "false_negative_decided_by":28,
        "other_major_issues_decided_by":28,
        "difficulty_decided_by":"[88, 13]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":16,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240820_honeycomb",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.56,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0.0"
    },
    {
        "instance_id":"pytest-dev__pytest-6197",
        "underspecified":1.0,
        "underspecified_notes":"The issue was detected by a build server: pytest 5.2.3 tries to import any `__init__.py` file under the current directory. This causes issues when there are packages that should only be imported under certain conditions (e.g., only on Windows and not on Linux). Running tests with pytest 5.2.2 succeeds without errors. The expected behavior should be consistent with pytest 5.2.2, where `__init__.py` files were not collected and imported during the test collection process. Although the issue and expectation are clear, it does not provide any root cause or hint to solve the issue. Therefore, it should be rated as 1.",
        "false_negative":1.0,
        "false_negative_notes":"The tests correctly check that empty packages are not eagerly collected and that the tests in the `__init__` files are skipped(ignored) in the current directory as per the issue description.\nHowever, these tests might be too strict for some unusual solutions which only address the issue by skipping tests in the __init__ file, which would achieve the goal as per the issue.\nSuch solutions could fail the `test_does_not_put_src_on_path` and therefore the solution is rated as a 1.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":12,
        "false_negative_decided_by":27,
        "other_major_issues_decided_by":12,
        "difficulty_decided_by":"[12, 27]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1.0"
    },
    {
        "instance_id":"django__django-13741",
        "underspecified":0.0,
        "underspecified_notes":"The issue description is well-specified, It clearly states the objective: to set the disabled property to True by default on the “ReadOnlyPasswordHashField” in Django’s “UserChangeForm”. The description provides relevant context about the “disabled” attribute behavior, explaining how it prevents user edits and highlights potential pitfalls when using the “ReadOnlyPasswordHashField” without the “clean_password” method. This clarity allows an engineer to understand what is needed to implement the solution successfully. ",
        "false_negative":0.0,
        "false_negative_notes":"The tests comprehensively cover the requirements outlined in the issue. The test verifies that the “ReadoOnlyPasswordHashField” has the “disabled” property set to True, ensuring that the field is not editable. This directly aligns with the issue’s goal of preventing accidental changes to the password. Additionally, the tests do not introduce any assumptions or details not mentioned in the issue description, making them well-scoped to validate all possible solutions effectively. ",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":81,
        "false_negative_decided_by":81,
        "other_major_issues_decided_by":81,
        "difficulty_decided_by":"[81, 26, 19]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":28,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.22,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0.0"
    },
    {
        "instance_id":"astropy__astropy-8707",
        "underspecified":1.0,
        "underspecified_notes":"The issue is clear. the function `Header.fromstring` cannot accept Python 3 bytes.  Also, the issue is not clear about `Card.fromstring` whether it is having the same problem or not which considered a blank to fill for this ticket. The problem exists in Python 3 and not Python 2 which helps with the reproduction. The problem is clear and reproducible which makes a good start for a professional software developer to tackle.\n\n ",
        "false_negative":0.0,
        "false_negative_notes":"The tests `test_header_fromstring_bytes` and `test_card_from_bytes` confirm that the methods `Header.fromstring` and `Card.fromstring` can correctly handle bytes objects, addressing the issue described. I cannot think of any other solution that might fail the tests.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":7,
        "false_negative_decided_by":44,
        "other_major_issues_decided_by":44,
        "difficulty_decided_by":"[44, 7, 35]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":5,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20240617_factory_code_droid"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.86,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0.0"
    },
    {
        "instance_id":"django__django-15561",
        "underspecified":1.0,
        "underspecified_notes":"The issue is well described that is AlterField operation should be noop when adding\/changing choices on SQLite. Some blanks to fill would to be the specific db attr do be updated such that alteration should be noop the issue mentions one that is choices. It would be best know if that is the case for all dbs the author provides example of how postgres db handles these.",
        "false_negative":0.0,
        "false_negative_notes":"The test uses the schema editor to attempt to alter the name field of the Author model from old_field to new_field, while asserting that no database queries are executed (assertNumQueries(0)). This will cover all possible solutions as this was the intended behaviour.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":68,
        "false_negative_decided_by":68,
        "other_major_issues_decided_by":68,
        "difficulty_decided_by":"[68, 6]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":12,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.67,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0.0"
    },
    {
        "instance_id":"django__django-11734",
        "underspecified":0.0,
        "underspecified_notes":"The ticket description is clear. The problem is that `OuterRef` in `exclude()` or `~Q()` is not working as expected. The ticket has also provided a reproducible example with the error raised message.",
        "false_negative":0.0,
        "false_negative_notes":"The  test patch is testing having `OuterRef` in `exclude()` and expects it to work properly. Any solution to the problem should pass these tests.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":7,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[7, 34, 3]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0.0"
    },
    {
        "instance_id":"django__django-11239",
        "underspecified":0.0,
        "underspecified_notes":"The `dbshell` command in Django lacks support for PostgreSQL client certificates and keys necessary for mutual TLS connections. Although Django's database configuration supports these SSL parameters, `dbshell` does not utilize them. Adding these SSL parameters to the `dbshell` command will enable secure mutual TLS database access.\n\nThe issue is well-defined, providing sufficient information for an experienced developer to find a solution.",
        "false_negative":1.0,
        "false_negative_notes":"These tests verify that the `runshell_db` method correctly sets the SSL parameters. This directly targets the issue.\n\nHowever, these tests would fail if the variables were named differently. That would be quite unusual though considering that the issue description provides the variable names that are used in the configuration already.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":14,
        "false_negative_decided_by":35,
        "other_major_issues_decided_by":14,
        "difficulty_decided_by":"[14, 35, 7]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":2,
        "solved_by":[
            "20241016_composio_swekit",
            "20241007_nfactorial"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.94,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1.0"
    },
    {
        "instance_id":"django__django-14007",
        "underspecified":0.0,
        "underspecified_notes":"The issue is about the `INSERT` statements not calling the database converters on the field. The issue is clear and well-specified.",
        "false_negative":0.0,
        "false_negative_notes":"The tests perfectly cover all possible solutions. The tests asserts that the return type of an `INSERT` statement or a `Model.objects.create()` query is passed to the database converters.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"1-4 hours",
        "underspecified_decided_by":58,
        "false_negative_decided_by":58,
        "other_major_issues_decided_by":58,
        "difficulty_decided_by":"[5, 80]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":8,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20240924_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.78,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_0.0"
    },
    {
        "instance_id":"pydata__xarray-4695",
        "underspecified":0.0,
        "underspecified_notes":"The issue description is clear. An example code has been provided and it is easy to understand that both DataArray constructors should behave the same way no matter what we pass as a dimension name.",
        "false_negative":0.0,
        "false_negative_notes":"Tests cover all solutions since the only thing to verify the solution is to call the DataArray with the erroneous dimension name and check if produces an output (doesn't even have to be the correct output as long as it doesn't give ValueError)",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":91,
        "false_negative_decided_by":91,
        "other_major_issues_decided_by":91,
        "difficulty_decided_by":"[91, 82, 90]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241022_tools_claude-3-5-sonnet-updated"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0.0"
    },
    {
        "instance_id":"sympy__sympy-17655",
        "underspecified":0.0,
        "underspecified_notes":"- The problem statement is clear, descriptive and explains the issue with proper example where `point1 + point2 * sympy.sympify(2.0)` works as expected, but changing the order of the values like `point1 + sympy.sympify(2.0) * point2` raises TypeError.\n- With the given information, it is evident to fix the issue so that both the given statements should work similarly without raising any exceptions. ",
        "false_negative":0.0,
        "false_negative_notes":" - The problem statement is clear and provided enough information to understand the issue and what a successful solution would look like, where irrespective of the order of variables in multiplication operations, it should not raise any exception and works similarly.\n - test case `test_point` and `test_point3D` are modified to verify the scenarios mentioned in the problem statement, like result of `a * b` and `b * a` is similar and does not raise any exceptions.\n - With all possible solution based on the problem statement, given test patch should work and cover all cases.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":69,
        "false_negative_decided_by":69,
        "other_major_issues_decided_by":69,
        "difficulty_decided_by":"[20, 54]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":13,
        "solved_by":[
            "20240920_solver",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240924_solver",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o"
        ],
        "empiric_difficulty":0.64,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0.0"
    },
    {
        "instance_id":"scikit-learn__scikit-learn-25973",
        "underspecified":1.0,
        "underspecified_notes":"The issue is clear; `Unable to pass splits to SequentialFeatureSelector`. A sample code is shared to reproduce the issue. The actual and expected outcomes are shared.\nHowever, there is a blank to fill as the user is not sure if this is a bug or the user is doing something wrong - `If somebody could confirm whether this is a bug, or I'm doing something wrong`. Nevertheless, there is a sensible interpretation of what is required for a successful solution. since the actual and expected outcomes are shared.",
        "false_negative":0.0,
        "false_negative_notes":"test_cv_generator_support ensures that when splits are passed to SequentialFeatureSelectorm, it runs without error.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":54,
        "false_negative_decided_by":54,
        "other_major_issues_decided_by":54,
        "difficulty_decided_by":"[54, 2]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":11,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20241028_solver",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241001_nfactorial",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "empiric_difficulty":0.69,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0.0"
    },
    {
        "instance_id":"sympy__sympy-18211",
        "underspecified":1.0,
        "underspecified_notes":"- The issue highlights that `solveset` raises `NotImplementedError` instead of returning `ConditionSet`.\n- The expected behavior is that a `ConditionSet` should be returned by `solveset`.\n- The description is not clear about the final result.\nTherefore, the preferable choice is 1.",
        "false_negative":1.0,
        "false_negative_notes":"- The test ensures that the equations are correctly transformed into sets representing the solutions within the real numbers.\n- Any solution that change `NotImplemented` error into something else rather than `ConditionSet` could not pass the test.\nTherefore, the preferable choice is 1.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":1,
        "false_negative_decided_by":1,
        "other_major_issues_decided_by":1,
        "difficulty_decided_by":"[1, 8]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":3,
        "solved_by":[
            "20240620_sweagent_claude3.5sonnet",
            "20241028_solver",
            "20241025_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.92,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1.0"
    },
    {
        "instance_id":"matplotlib__matplotlib-14623",
        "underspecified":1.0,
        "underspecified_notes":"The issue description highlights a bug starting in Matplotlib version 3.1.0 that causes inverting an axis using the limits to not work for a logarithmic scale. The inversion works correctly for the linear scale but fails for the logarithmic scale. It is unclear whether the axis inversion problem on the logarithmic scale only occurs on the y-axis or affects the X-axis as well. Therefore, there are some blanks left to fill about the issue.  ",
        "false_negative":0.0,
        "false_negative_notes":"The tests are well-scoped for most correct solutions and address the primary issue of axis inversion for logarithmic scales. ",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":57,
        "false_negative_decided_by":57,
        "other_major_issues_decided_by":57,
        "difficulty_decided_by":"[57, 20, 18]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20240920_solver"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0.0"
    },
    {
        "instance_id":"django__django-13212",
        "underspecified":1.0,
        "underspecified_notes":"The issue is very-well specified, in the sense it asks for validator messages to be propagated up into error messages as they would be helpful, with a useful example.\nThe reporter asks if validators can provide values to `ValidationError` and references a documentation link however, which we cannot access for a clearer example.\nTherefore, it is rated as 1 .",
        "false_negative":1.0,
        "false_negative_notes":"While a proper solution to this fix SHOULD attempt to address all validators, because of the lack of specificity in the issue description, it is possible only a few validators are addressed.\nTherefore, it might be possible to have solutions which resolve the reporters issues without all the fixes needed to pass the tests added.\nHence, some unusual solutions might be missed here.\nA rating of 1 is therefore selected.",
        "other_major_issues":0.0,
        "other_notes":"No issued missed.",
        "difficulty":"1-4 hours",
        "underspecified_decided_by":27,
        "false_negative_decided_by":27,
        "other_major_issues_decided_by":27,
        "difficulty_decided_by":"[27, 6]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":2,
        "difficulty_slugged":"1-4_hours",
        "stratify_column":"1-4_hours_1.0"
    },
    {
        "instance_id":"django__django-16429",
        "underspecified":1.0,
        "underspecified_notes":"The description effectively identifies a specific problem with the timesince() function in Django when USE_TZ=True is set, leading to a TypeError involving offset-naive and offset-aware datetimes. It also provides a link to the specific section of the code that likely needs modification. However, while the user suggests adding timezone information (tzinfo) to a datetime object instantiation, they don't specify exactly how or where to integrate this change within the function, leaving some gaps about the implementation details. This lack of precise modification details means that while the issue is generally clear, the exact steps for the solution might require some interpretation to ensure correctness and completeness.",
        "false_negative":1.0,
        "false_negative_notes":"The tests cover most correct solution, but some unusual ones might be missed. The tests do address the issue of handling timezones in the timesince correctly. However, they assume a specific fix by including tzinfo in the pivot datetime creation which might miss other valid solutions that handle timezone differences a bit differently.  So for this reason I would rate this as 1. ",
        "other_major_issues":0.0,
        "other_notes":"No other issues with the task",
        "difficulty":"<15 min fix",
        "underspecified_decided_by":37,
        "false_negative_decided_by":60,
        "other_major_issues_decided_by":53,
        "difficulty_decided_by":"[53, 60]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":29,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_rag_gpt4",
            "20231010_rag_swellama7b",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20240402_rag_claude3opus",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.19,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_1.0"
    },
    {
        "instance_id":"astropy__astropy-7671",
        "underspecified":0.0,
        "underspecified_notes":"The issue statement is a clear one - since a recent patch, minversion fails in certain cases, and the examples given highlight the fact that this occurs when the version contains a string, like \"dev\".\nSo the correct solutions should be straightforward to understand, make sure that all versions are supported by LooseVersion. Hence the label 0",
        "false_negative":0.0,
        "false_negative_notes":"The tests cover the reasonable cases for the issue raised in the problem statement. They add the check for version \"0.12dev\" which should be passing for any correct solution. So the label 0 should be chosen",
        "other_major_issues":0.0,
        "other_notes":"No issues with the task",
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":53,
        "false_negative_decided_by":53,
        "other_major_issues_decided_by":53,
        "difficulty_decided_by":"[53, 60, 64]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":26,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240820_honeycomb",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20240728_sweagent_gpt4o",
            "20231010_rag_swellama7b",
            "20241016_composio_swekit",
            "20231010_rag_gpt35"
        ],
        "empiric_difficulty":0.28,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0.0"
    },
    {
        "instance_id":"django__django-14053",
        "underspecified":1.0,
        "underspecified_notes":"The ticket has made a good analysis for the problem. But it didn't provide a full reproducible code which is a blank to fill. However, it manages to provide a good start to fix the problem.",
        "false_negative":0.0,
        "false_negative_notes":"The test patch is testing that there is no duplication in the output of the command. Any solution to fix the problem should pass these tests.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":7,
        "false_negative_decided_by":7,
        "other_major_issues_decided_by":7,
        "difficulty_decided_by":"[14, 43]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":19,
        "solved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20241028_agentless-1.5_gpt4o",
            "20241022_tools_claude-3-5-haiku",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241016_composio_swekit",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20231010_rag_swellama13b",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241001_nfactorial",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.47,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0.0"
    },
    {
        "instance_id":"django__django-11964",
        "underspecified":1.0,
        "underspecified_notes":"While the issue description is clear about the problem and the expected behaviour via test cases but it doesn't specify whether the solution should involve changes to the __str__ method, modifications in the model field implementation, or another approach leaving room for interpretation.",
        "false_negative":0.0,
        "false_negative_notes":"The test test_str iterates through different enum classes (Gender, Suit, YearInSchool, Vehicle) and verifies that the string representation matches the member's value ensuring that various cases are tested, not just a single scenario.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":32,
        "false_negative_decided_by":32,
        "other_major_issues_decided_by":32,
        "difficulty_decided_by":"[54, 19]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":3,
        "solved_by":[
            "20240628_autocoderover-v20240620",
            "20241028_agentless-1.5_gpt4o",
            "20241016_composio_swekit"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.92,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0.0"
    },
    {
        "instance_id":"django__django-13406",
        "underspecified":0.0,
        "underspecified_notes":"- The issue describes a problem with Django's querysets when using values() or values_list() methods combined with annotate() for a GROUP BY functionality, and then pickling and unpickling the query. The result after unpickling does not match the expected structure, causing errors.\n- The issue is well-explained with a clear problem statement, detailed reproduction steps, and a specific error traceback. This helps in understanding the problem's context and the impact.\n- The last line correctly explains the cause of this issue but doesn't provide the technical reason behind it which is upto the engineer to find.",
        "false_negative":0.0,
        "false_negative_notes":"- The tests provided effectively ensure that querysets using values() and annotate() return the correct data structure (dict instead of model instances) after being pickled and unpickled. This is the core issue described, and the tests validate that the intended behavior is maintained.\n- The tests verify the end result, which is the intended behavior according to the issue description. They ensure that the queryset maintains the correct data structure, which implicitly verifies that _iterable_class is set correctly.\n- There are no significant gaps or edge cases that are not covered by the tests. The primary goal is to ensure that the queryset behaves correctly after pickling and unpickling, which the tests achieve.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"<15 min fix",
        "underspecified_decided_by":26,
        "false_negative_decided_by":26,
        "other_major_issues_decided_by":26,
        "difficulty_decided_by":"[26, 17]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":1,
        "solved_by":[
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022"
        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.97,
        "difficulty_encoded":0,
        "difficulty_slugged":"<15_min_fix",
        "stratify_column":"<15_min_fix_0.0"
    },
    {
        "instance_id":"sphinx-doc__sphinx-8056",
        "underspecified":0.0,
        "underspecified_notes":"The issue description clearly outlines the problem of rendering errors in Sphinx when combining multiple input parameters in a docstring. It provides a reproducible example, the expected behavior, and a description of the incorrect output. Additionally, it includes the environment details, which are helpful for debugging. The steps to reproduce the issue and the expected outcome are clearly defined, making it well-specified enough for a successful solution.",
        "false_negative":1.0,
        "false_negative_notes":"The test patch includes tests for handling multiple parameters in a docstring, which aligns with the issue description. However, it does not cover the case where the parameters are marked as optional, which was mentioned in the issue description. Therefore, while the tests cover the main aspects of the issue, they might miss some specific cases involving optional parameters.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":29,
        "false_negative_decided_by":29,
        "other_major_issues_decided_by":29,
        "difficulty_decided_by":"[29, 13]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":false,
        "times_solved":0,
        "solved_by":[

        ],
        "unsolved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240924_solver",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241016_epam-ai-run-gpt-4o",
            "20241025_composio_swekit",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet",
            "20241023_emergent"
        ],
        "empiric_difficulty":1.0,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_1.0"
    },
    {
        "instance_id":"pydata__xarray-6599",
        "underspecified":0.0,
        "underspecified_notes":"The issue description is well-specified, clearly explaining the problem with polyval when using timedelta64 coordinates. It provides a minimal complete verifiable example (MCVE) to reproduce the issue, specifies the expected and actual results, and includes relevant version information. This comprehensive information makes it clear what needs to be fixed, enabling an experienced engineer to understand the problem and work towards a solution without needing further clarification.",
        "false_negative":0.0,
        "false_negative_notes":"The tests are well-scoped and cover all reasonable solutions to the issue. They specifically check for the correct handling of timedelta64 coordinates in the polyval function. The tests ensure that the function works as expected with both datetime and timedelta data types, verifying that the solution addresses the issue described.",
        "other_major_issues":0.0,
        "other_notes":null,
        "difficulty":"15 min - 1 hour",
        "underspecified_decided_by":29,
        "false_negative_decided_by":29,
        "other_major_issues_decided_by":29,
        "difficulty_decided_by":"[29, 60]",
        "difficulty_ensemble_decision_procedure":"majority",
        "filter_out":false,
        "was_resolved":true,
        "times_solved":6,
        "solved_by":[
            "20240721_amazon-q-developer-agent-20240719-dev",
            "20241002_lingma-agent_lingma-swe-gpt-72b",
            "20240924_solver",
            "20241016_epam-ai-run-gpt-4o",
            "20240617_factory_code_droid",
            "20241029_epam-ai-run-claude-3-5-sonnet"
        ],
        "unsolved_by":[
            "20240615_appmap-navie_gpt4o",
            "20240509_amazon-q-developer-agent-20240430-dev",
            "20240628_autocoderover-v20240620",
            "20231010_rag_swellama13b",
            "20240920_solver",
            "20231010_rag_claude2",
            "20240402_sweagent_claude3opus",
            "20241028_agentless-1.5_gpt4o",
            "20240402_rag_gpt4",
            "20241022_tools_claude-3-5-sonnet-updated",
            "20241022_tools_claude-3-5-haiku",
            "20241001_nfactorial",
            "20240824_gru",
            "20240728_sweagent_gpt4o",
            "20240820_honeycomb",
            "20231010_rag_swellama7b",
            "20240620_sweagent_claude3.5sonnet",
            "20240402_sweagent_gpt4",
            "20240820_epam-ai-run-gpt-4o",
            "20241028_solver",
            "20241002_lingma-agent_lingma-swe-gpt-7b",
            "20241029_OpenHands-CodeAct-2.1-sonnet-20241022",
            "20241016_composio_swekit",
            "20240402_rag_claude3opus",
            "20240918_lingma-agent_lingma-swe-gpt-7b",
            "20240918_lingma-agent_lingma-swe-gpt-72b",
            "20241007_nfactorial",
            "20231010_rag_gpt35",
            "20241025_composio_swekit",
            "20241023_emergent"
        ],
        "empiric_difficulty":0.83,
        "difficulty_encoded":1,
        "difficulty_slugged":"15_min_-_1_hour",
        "stratify_column":"15_min_-_1_hour_0.0"
    }
]